/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 26 08:50:32 GMT 2023
 */

package tutorial;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.InputMismatchException;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;
import tutorial.KruskalAlgorithm;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class KruskalAlgorithm_ESTest extends KruskalAlgorithm_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      KruskalAlgorithm kruskalAlgorithm0 = new KruskalAlgorithm(0, 0);
      kruskalAlgorithm0.vertices = 0;
      String[] stringArray0 = new String[9];
      stringArray0[0] = "pHkJ%'6Z<";
      stringArray0[1] = "z";
      SystemInUtil.addInputLine("3Rx\"_u");
      stringArray0[2] = "";
      stringArray0[3] = "Enter number of edges";
      stringArray0[4] = "";
      stringArray0[5] = "}J7#=\"|5x[KT1";
      stringArray0[6] = "+u!&Y?2ze#?GpQg";
      stringArray0[7] = "";
      stringArray0[8] = "r_*ep*";
      // Undeclared exception!
      try { 
        KruskalAlgorithm.main(stringArray0);
        fail("Expecting exception: InputMismatchException");
      
      } catch(InputMismatchException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      KruskalAlgorithm kruskalAlgorithm0 = new KruskalAlgorithm(1, 1);
      kruskalAlgorithm0.applyKruskal();
      KruskalAlgorithm kruskalAlgorithm1 = new KruskalAlgorithm((-1), 2690);
      KruskalAlgorithm.Edge kruskalAlgorithm_Edge0 = kruskalAlgorithm1.new Edge();
      kruskalAlgorithm_Edge0.weight = 2240;
      KruskalAlgorithm.Edge kruskalAlgorithm_Edge1 = kruskalAlgorithm0.new Edge();
      kruskalAlgorithm_Edge1.weight = 2790;
      kruskalAlgorithm_Edge0.compareTo(kruskalAlgorithm_Edge1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      KruskalAlgorithm kruskalAlgorithm0 = new KruskalAlgorithm(0, 0);
      KruskalAlgorithm.Edge kruskalAlgorithm_Edge0 = kruskalAlgorithm0.new Edge();
      KruskalAlgorithm.Subset[] kruskalAlgorithm_SubsetArray0 = new KruskalAlgorithm.Subset[3];
      KruskalAlgorithm.Subset kruskalAlgorithm_Subset0 = kruskalAlgorithm0.new Subset();
      kruskalAlgorithm_SubsetArray0[0] = kruskalAlgorithm_Subset0;
      KruskalAlgorithm kruskalAlgorithm1 = new KruskalAlgorithm(0, 0);
      KruskalAlgorithm.Subset kruskalAlgorithm_Subset1 = kruskalAlgorithm1.new Subset();
      kruskalAlgorithm_Subset0.parent = 3154;
      kruskalAlgorithm_SubsetArray0[1] = kruskalAlgorithm_Subset1;
      KruskalAlgorithm.Subset kruskalAlgorithm_Subset2 = kruskalAlgorithm0.new Subset();
      kruskalAlgorithm1.edges = 0;
      kruskalAlgorithm_SubsetArray0[2] = kruskalAlgorithm_Subset2;
      // Undeclared exception!
      try { 
        kruskalAlgorithm0.performUnion(kruskalAlgorithm_SubsetArray0, 0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      KruskalAlgorithm kruskalAlgorithm0 = new KruskalAlgorithm(0, 0);
      KruskalAlgorithm.Edge[] kruskalAlgorithm_EdgeArray0 = new KruskalAlgorithm.Edge[5];
      KruskalAlgorithm.Edge kruskalAlgorithm_Edge0 = kruskalAlgorithm0.new Edge();
      kruskalAlgorithm_Edge0.weight = 0;
      kruskalAlgorithm_EdgeArray0[0] = kruskalAlgorithm_Edge0;
      KruskalAlgorithm.Edge kruskalAlgorithm_Edge1 = kruskalAlgorithm0.new Edge();
      kruskalAlgorithm_Edge1.destination = (-1863);
      kruskalAlgorithm_EdgeArray0[1] = kruskalAlgorithm_Edge1;
      KruskalAlgorithm.Edge kruskalAlgorithm_Edge2 = kruskalAlgorithm0.new Edge();
      kruskalAlgorithm_EdgeArray0[2] = kruskalAlgorithm_Edge2;
      KruskalAlgorithm.Edge kruskalAlgorithm_Edge3 = kruskalAlgorithm0.new Edge();
      kruskalAlgorithm_EdgeArray0[3] = kruskalAlgorithm_Edge3;
      KruskalAlgorithm.Edge kruskalAlgorithm_Edge4 = kruskalAlgorithm0.new Edge();
      kruskalAlgorithm_EdgeArray0[4] = kruskalAlgorithm_Edge4;
      kruskalAlgorithm0.edgeArray = kruskalAlgorithm_EdgeArray0;
      kruskalAlgorithm0.edgeArray = kruskalAlgorithm_EdgeArray0;
      kruskalAlgorithm_Edge4.source = (-1210);
      KruskalAlgorithm.Edge kruskalAlgorithm_Edge5 = kruskalAlgorithm0.new Edge();
      kruskalAlgorithm0.applyKruskal();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "3B0ib~TmIJ$u?Vd";
      // Undeclared exception!
      try { 
        KruskalAlgorithm.main(stringArray0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      KruskalAlgorithm kruskalAlgorithm0 = new KruskalAlgorithm(951, 951);
      KruskalAlgorithm.Edge kruskalAlgorithm_Edge0 = kruskalAlgorithm0.new Edge();
      KruskalAlgorithm.Edge kruskalAlgorithm_Edge1 = kruskalAlgorithm0.new Edge();
      kruskalAlgorithm0.vertices = 951;
      kruskalAlgorithm_Edge0.compareTo(kruskalAlgorithm_Edge1);
      KruskalAlgorithm.Edge[] kruskalAlgorithm_EdgeArray0 = new KruskalAlgorithm.Edge[2];
      kruskalAlgorithm_EdgeArray0[0] = kruskalAlgorithm_Edge0;
      kruskalAlgorithm_EdgeArray0[1] = kruskalAlgorithm_Edge1;
      kruskalAlgorithm0.edgeArray = kruskalAlgorithm_EdgeArray0;
      kruskalAlgorithm_Edge0.compareTo(kruskalAlgorithm_Edge1);
      kruskalAlgorithm_Edge0.compareTo(kruskalAlgorithm_Edge1);
      KruskalAlgorithm.Subset[] kruskalAlgorithm_SubsetArray0 = null;
      // Undeclared exception!
      try { 
        kruskalAlgorithm0.performUnion((KruskalAlgorithm.Subset[]) null, (-93), 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      KruskalAlgorithm kruskalAlgorithm0 = new KruskalAlgorithm(1, 1);
      kruskalAlgorithm0.applyKruskal();
      KruskalAlgorithm kruskalAlgorithm1 = new KruskalAlgorithm((-1), 2690);
      KruskalAlgorithm.Edge kruskalAlgorithm_Edge0 = kruskalAlgorithm1.new Edge();
      kruskalAlgorithm_Edge0.weight = 2240;
      KruskalAlgorithm.Edge kruskalAlgorithm_Edge1 = kruskalAlgorithm0.new Edge();
      kruskalAlgorithm_Edge0.compareTo(kruskalAlgorithm_Edge1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      KruskalAlgorithm kruskalAlgorithm0 = new KruskalAlgorithm(181, 1);
      KruskalAlgorithm.Subset kruskalAlgorithm_Subset0 = kruskalAlgorithm0.new Subset();
      kruskalAlgorithm0.edges = 181;
      KruskalAlgorithm.Subset[] kruskalAlgorithm_SubsetArray0 = null;
      kruskalAlgorithm0.edges = 181;
      // Undeclared exception!
      try { 
        kruskalAlgorithm0.findSetOfElement((KruskalAlgorithm.Subset[]) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      KruskalAlgorithm kruskalAlgorithm0 = new KruskalAlgorithm(1869, 1869);
      KruskalAlgorithm.Subset[] kruskalAlgorithm_SubsetArray0 = new KruskalAlgorithm.Subset[6];
      KruskalAlgorithm.Subset kruskalAlgorithm_Subset0 = kruskalAlgorithm0.new Subset();
      kruskalAlgorithm_SubsetArray0[0] = kruskalAlgorithm_Subset0;
      KruskalAlgorithm.Subset kruskalAlgorithm_Subset1 = kruskalAlgorithm0.new Subset();
      kruskalAlgorithm_SubsetArray0[1] = kruskalAlgorithm_Subset1;
      KruskalAlgorithm.Subset kruskalAlgorithm_Subset2 = kruskalAlgorithm0.new Subset();
      kruskalAlgorithm_SubsetArray0[2] = kruskalAlgorithm_Subset2;
      KruskalAlgorithm.Subset kruskalAlgorithm_Subset3 = kruskalAlgorithm0.new Subset();
      kruskalAlgorithm_Subset0.value = 1869;
      kruskalAlgorithm_SubsetArray0[3] = kruskalAlgorithm_Subset3;
      KruskalAlgorithm.Subset kruskalAlgorithm_Subset4 = kruskalAlgorithm0.new Subset();
      kruskalAlgorithm_SubsetArray0[4] = kruskalAlgorithm_Subset4;
      KruskalAlgorithm.Subset kruskalAlgorithm_Subset5 = kruskalAlgorithm0.new Subset();
      kruskalAlgorithm_SubsetArray0[5] = kruskalAlgorithm_Subset5;
      // Undeclared exception!
      try { 
        kruskalAlgorithm0.performUnion(kruskalAlgorithm_SubsetArray0, 1869, 2696);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int int0 = 647;
      KruskalAlgorithm kruskalAlgorithm0 = new KruskalAlgorithm(647, 647);
      KruskalAlgorithm.Subset[] kruskalAlgorithm_SubsetArray0 = new KruskalAlgorithm.Subset[8];
      // Undeclared exception!
      try { 
        kruskalAlgorithm0.applyKruskal();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      KruskalAlgorithm kruskalAlgorithm0 = new KruskalAlgorithm((-724), 1104);
      KruskalAlgorithm.Edge[] kruskalAlgorithm_EdgeArray0 = new KruskalAlgorithm.Edge[9];
      KruskalAlgorithm.Edge kruskalAlgorithm_Edge0 = kruskalAlgorithm0.new Edge();
      kruskalAlgorithm_EdgeArray0[0] = kruskalAlgorithm_Edge0;
      KruskalAlgorithm.Edge kruskalAlgorithm_Edge1 = kruskalAlgorithm0.new Edge();
      kruskalAlgorithm_EdgeArray0[1] = kruskalAlgorithm_Edge1;
      KruskalAlgorithm.Edge kruskalAlgorithm_Edge2 = kruskalAlgorithm0.new Edge();
      kruskalAlgorithm_EdgeArray0[2] = kruskalAlgorithm_Edge2;
      KruskalAlgorithm.Edge kruskalAlgorithm_Edge3 = kruskalAlgorithm0.new Edge();
      kruskalAlgorithm_EdgeArray0[3] = kruskalAlgorithm_Edge3;
      KruskalAlgorithm.Edge kruskalAlgorithm_Edge4 = kruskalAlgorithm0.new Edge();
      kruskalAlgorithm_EdgeArray0[4] = kruskalAlgorithm_Edge4;
      KruskalAlgorithm.Edge kruskalAlgorithm_Edge5 = kruskalAlgorithm0.new Edge();
      kruskalAlgorithm_EdgeArray0[5] = kruskalAlgorithm_Edge5;
      KruskalAlgorithm.Edge kruskalAlgorithm_Edge6 = kruskalAlgorithm0.new Edge();
      kruskalAlgorithm_EdgeArray0[6] = kruskalAlgorithm_Edge6;
      KruskalAlgorithm.Edge kruskalAlgorithm_Edge7 = kruskalAlgorithm0.new Edge();
      kruskalAlgorithm_EdgeArray0[7] = kruskalAlgorithm_Edge7;
      KruskalAlgorithm.Edge kruskalAlgorithm_Edge8 = kruskalAlgorithm0.new Edge();
      kruskalAlgorithm_EdgeArray0[8] = kruskalAlgorithm_Edge8;
      kruskalAlgorithm0.edgeArray = kruskalAlgorithm_EdgeArray0;
      // Undeclared exception!
      try { 
        kruskalAlgorithm0.applyKruskal();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("tutorial.KruskalAlgorithm", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      KruskalAlgorithm kruskalAlgorithm0 = new KruskalAlgorithm(0, 0);
      KruskalAlgorithm.Edge kruskalAlgorithm_Edge0 = kruskalAlgorithm0.new Edge();
      KruskalAlgorithm.Edge kruskalAlgorithm_Edge1 = kruskalAlgorithm0.new Edge();
      kruskalAlgorithm_Edge0.compareTo(kruskalAlgorithm_Edge1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "!$.mq9q7QtgZW%P~kI@";
      stringArray0[2] = "?DHJ{}B&'A~#L>Bh%";
      // Undeclared exception!
      try { 
        KruskalAlgorithm.main(stringArray0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      KruskalAlgorithm kruskalAlgorithm0 = new KruskalAlgorithm(0, 25);
      kruskalAlgorithm0.applyKruskal();
      KruskalAlgorithm.Subset[] kruskalAlgorithm_SubsetArray0 = new KruskalAlgorithm.Subset[3];
      KruskalAlgorithm kruskalAlgorithm1 = new KruskalAlgorithm(0, 25);
      KruskalAlgorithm.Subset kruskalAlgorithm_Subset0 = kruskalAlgorithm1.new Subset();
      kruskalAlgorithm_SubsetArray0[0] = kruskalAlgorithm_Subset0;
      KruskalAlgorithm.Edge[] kruskalAlgorithm_EdgeArray0 = new KruskalAlgorithm.Edge[2];
      KruskalAlgorithm.Edge kruskalAlgorithm_Edge0 = kruskalAlgorithm0.new Edge();
      kruskalAlgorithm1.applyKruskal();
      kruskalAlgorithm_EdgeArray0[0] = kruskalAlgorithm_Edge0;
      KruskalAlgorithm.Edge kruskalAlgorithm_Edge1 = kruskalAlgorithm0.new Edge();
      kruskalAlgorithm_Edge1.source = (-1);
      kruskalAlgorithm_EdgeArray0[1] = kruskalAlgorithm_Edge1;
      kruskalAlgorithm1.edgeArray = kruskalAlgorithm_EdgeArray0;
      KruskalAlgorithm.Subset kruskalAlgorithm_Subset1 = kruskalAlgorithm0.new Subset();
      kruskalAlgorithm_SubsetArray0[1] = kruskalAlgorithm_Subset1;
      KruskalAlgorithm.Subset kruskalAlgorithm_Subset2 = kruskalAlgorithm0.new Subset();
      kruskalAlgorithm_Subset1.parent = 0;
      kruskalAlgorithm_Subset2.value = (-2415);
      kruskalAlgorithm_SubsetArray0[2] = kruskalAlgorithm_Subset2;
      kruskalAlgorithm1.vertices = (-1);
      // Undeclared exception!
      try { 
        kruskalAlgorithm0.findSetOfElement(kruskalAlgorithm_SubsetArray0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      KruskalAlgorithm kruskalAlgorithm0 = null;
      try {
        kruskalAlgorithm0 = new KruskalAlgorithm((-3094), (-3094));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("tutorial.KruskalAlgorithm", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      KruskalAlgorithm kruskalAlgorithm0 = new KruskalAlgorithm(0, 0);
      KruskalAlgorithm.Subset[] kruskalAlgorithm_SubsetArray0 = new KruskalAlgorithm.Subset[6];
      KruskalAlgorithm.Subset kruskalAlgorithm_Subset0 = kruskalAlgorithm0.new Subset();
      kruskalAlgorithm_SubsetArray0[0] = kruskalAlgorithm_Subset0;
      KruskalAlgorithm.Subset kruskalAlgorithm_Subset1 = kruskalAlgorithm0.new Subset();
      kruskalAlgorithm_SubsetArray0[1] = kruskalAlgorithm_Subset1;
      KruskalAlgorithm.Subset kruskalAlgorithm_Subset2 = kruskalAlgorithm0.new Subset();
      kruskalAlgorithm_SubsetArray0[2] = kruskalAlgorithm_Subset2;
      KruskalAlgorithm.Subset kruskalAlgorithm_Subset3 = kruskalAlgorithm0.new Subset();
      kruskalAlgorithm_SubsetArray0[3] = kruskalAlgorithm_Subset3;
      KruskalAlgorithm.Subset kruskalAlgorithm_Subset4 = kruskalAlgorithm0.new Subset();
      kruskalAlgorithm_SubsetArray0[4] = kruskalAlgorithm_Subset4;
      KruskalAlgorithm.Subset kruskalAlgorithm_Subset5 = kruskalAlgorithm0.new Subset();
      kruskalAlgorithm_SubsetArray0[5] = kruskalAlgorithm_Subset5;
      kruskalAlgorithm0.findSetOfElement(kruskalAlgorithm_SubsetArray0, 0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      KruskalAlgorithm kruskalAlgorithm0 = new KruskalAlgorithm(1623, 1623);
      KruskalAlgorithm.Subset[] kruskalAlgorithm_SubsetArray0 = new KruskalAlgorithm.Subset[9];
      KruskalAlgorithm.Subset kruskalAlgorithm_Subset0 = kruskalAlgorithm0.new Subset();
      kruskalAlgorithm_SubsetArray0[0] = kruskalAlgorithm_Subset0;
      KruskalAlgorithm.Subset kruskalAlgorithm_Subset1 = kruskalAlgorithm0.new Subset();
      kruskalAlgorithm_SubsetArray0[1] = kruskalAlgorithm_Subset1;
      KruskalAlgorithm.Subset kruskalAlgorithm_Subset2 = kruskalAlgorithm0.new Subset();
      kruskalAlgorithm_SubsetArray0[2] = kruskalAlgorithm_Subset2;
      KruskalAlgorithm.Subset kruskalAlgorithm_Subset3 = kruskalAlgorithm0.new Subset();
      kruskalAlgorithm_SubsetArray0[3] = kruskalAlgorithm_Subset3;
      KruskalAlgorithm.Subset kruskalAlgorithm_Subset4 = kruskalAlgorithm0.new Subset();
      kruskalAlgorithm_SubsetArray0[4] = kruskalAlgorithm_Subset4;
      KruskalAlgorithm.Subset kruskalAlgorithm_Subset5 = kruskalAlgorithm0.new Subset();
      kruskalAlgorithm_SubsetArray0[5] = kruskalAlgorithm_Subset5;
      KruskalAlgorithm.Subset kruskalAlgorithm_Subset6 = kruskalAlgorithm0.new Subset();
      kruskalAlgorithm_SubsetArray0[6] = kruskalAlgorithm_Subset6;
      KruskalAlgorithm.Subset kruskalAlgorithm_Subset7 = kruskalAlgorithm0.new Subset();
      kruskalAlgorithm_SubsetArray0[7] = kruskalAlgorithm_Subset7;
      KruskalAlgorithm.Subset kruskalAlgorithm_Subset8 = kruskalAlgorithm0.new Subset();
      kruskalAlgorithm_SubsetArray0[8] = kruskalAlgorithm_Subset8;
      kruskalAlgorithm0.performUnion(kruskalAlgorithm_SubsetArray0, 0, 0);
      // Undeclared exception!
      try { 
        kruskalAlgorithm0.applyKruskal();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = " xg]]2VF3#";
      stringArray0[2] = "$ MYL@~'wA";
      stringArray0[3] = "fG$2 Po";
      stringArray0[4] = "D2L!8*;2A,RB_u7";
      stringArray0[5] = "gwZXEx=,1";
      // Undeclared exception!
      try { 
        KruskalAlgorithm.main(stringArray0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      KruskalAlgorithm.Edge[] kruskalAlgorithm_EdgeArray0 = new KruskalAlgorithm.Edge[3];
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = " - ";
      stringArray0[2] = "";
      stringArray0[3] = "!HV<";
      stringArray0[4] = "";
      stringArray0[5] = "";
      // Undeclared exception!
      try { 
        KruskalAlgorithm.main(stringArray0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      try { 
        KruskalAlgorithm.main((String[]) null);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int int0 = 660;
      KruskalAlgorithm kruskalAlgorithm0 = new KruskalAlgorithm(660, 660);
      // Undeclared exception!
      try { 
        kruskalAlgorithm0.applyKruskal();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      KruskalAlgorithm kruskalAlgorithm0 = new KruskalAlgorithm(0, 0);
      KruskalAlgorithm.Subset[] kruskalAlgorithm_SubsetArray0 = new KruskalAlgorithm.Subset[5];
      KruskalAlgorithm.Subset kruskalAlgorithm_Subset0 = kruskalAlgorithm0.new Subset();
      kruskalAlgorithm_SubsetArray0[0] = kruskalAlgorithm_Subset0;
      KruskalAlgorithm.Subset kruskalAlgorithm_Subset1 = kruskalAlgorithm0.new Subset();
      kruskalAlgorithm_SubsetArray0[1] = kruskalAlgorithm_Subset1;
      KruskalAlgorithm kruskalAlgorithm1 = new KruskalAlgorithm(0, 1);
      KruskalAlgorithm.Subset kruskalAlgorithm_Subset2 = kruskalAlgorithm1.new Subset();
      kruskalAlgorithm_SubsetArray0[2] = kruskalAlgorithm_Subset2;
      KruskalAlgorithm.Subset kruskalAlgorithm_Subset3 = kruskalAlgorithm1.new Subset();
      kruskalAlgorithm_SubsetArray0[3] = kruskalAlgorithm_Subset3;
      KruskalAlgorithm.Subset kruskalAlgorithm_Subset4 = kruskalAlgorithm0.new Subset();
      kruskalAlgorithm_SubsetArray0[4] = kruskalAlgorithm_Subset4;
      kruskalAlgorithm0.performUnion(kruskalAlgorithm_SubsetArray0, 1, 1);
      KruskalAlgorithm.Subset kruskalAlgorithm_Subset5 = kruskalAlgorithm0.new Subset();
      kruskalAlgorithm0.applyKruskal();
      assertFalse(kruskalAlgorithm0.equals((Object)kruskalAlgorithm1));
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      KruskalAlgorithm.Subset[] kruskalAlgorithm_SubsetArray0 = new KruskalAlgorithm.Subset[6];
      KruskalAlgorithm kruskalAlgorithm0 = new KruskalAlgorithm(0, 0);
      KruskalAlgorithm.Subset kruskalAlgorithm_Subset0 = kruskalAlgorithm0.new Subset();
      kruskalAlgorithm_SubsetArray0[1] = kruskalAlgorithm_Subset0;
      KruskalAlgorithm.Subset kruskalAlgorithm_Subset1 = kruskalAlgorithm0.new Subset();
      kruskalAlgorithm_SubsetArray0[4] = kruskalAlgorithm_Subset1;
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      KruskalAlgorithm kruskalAlgorithm0 = new KruskalAlgorithm(1, 1);
      kruskalAlgorithm0.edges = 0;
      kruskalAlgorithm0.applyKruskal();
      KruskalAlgorithm.Subset[] kruskalAlgorithm_SubsetArray0 = new KruskalAlgorithm.Subset[6];
      KruskalAlgorithm kruskalAlgorithm1 = new KruskalAlgorithm(1, 0);
      KruskalAlgorithm.Subset kruskalAlgorithm_Subset0 = kruskalAlgorithm1.new Subset();
      kruskalAlgorithm_SubsetArray0[0] = kruskalAlgorithm_Subset0;
      KruskalAlgorithm.Subset kruskalAlgorithm_Subset1 = kruskalAlgorithm1.new Subset();
      kruskalAlgorithm_SubsetArray0[1] = kruskalAlgorithm_Subset1;
      KruskalAlgorithm.Subset kruskalAlgorithm_Subset2 = kruskalAlgorithm1.new Subset();
      kruskalAlgorithm_SubsetArray0[2] = kruskalAlgorithm_Subset2;
      KruskalAlgorithm.Subset kruskalAlgorithm_Subset3 = kruskalAlgorithm1.new Subset();
      kruskalAlgorithm_SubsetArray0[3] = kruskalAlgorithm_Subset3;
      KruskalAlgorithm.Subset kruskalAlgorithm_Subset4 = kruskalAlgorithm1.new Subset();
      kruskalAlgorithm_SubsetArray0[4] = kruskalAlgorithm_Subset4;
      KruskalAlgorithm.Subset kruskalAlgorithm_Subset5 = kruskalAlgorithm1.new Subset();
      kruskalAlgorithm_SubsetArray0[5] = kruskalAlgorithm_Subset5;
      // Undeclared exception!
      try { 
        kruskalAlgorithm0.performUnion(kruskalAlgorithm_SubsetArray0, 0, (-982));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
