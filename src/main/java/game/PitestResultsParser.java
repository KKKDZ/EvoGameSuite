package game;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import java.io.File;

// This class will parse the XML output generated by PIT and extract the relevant mutant coverage information
// for a specific class.
public class PitestResultsParser {

    // Parses the PIT mutation testing results from the given XML file.
    public static PitestResults parseResults(String filePath) {
        PitestResults results = new PitestResults();

        try {
            // Load the XML document from the file.
            File inputFile = new File(filePath);
            DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
            DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
            Document doc = dBuilder.parse(inputFile);
            doc.getDocumentElement().normalize();

            // Get the list of mutation elements.
            NodeList nodeList = doc.getElementsByTagName("mutation");

            // Initialize mutation counters.
            int killed = 0;
            int survived = 0;
            int noCoverage = 0;

            // Iterate through each mutation element.
            // Get the mutation status and update the appropriate counters.
            for (int i = 0; i < nodeList.getLength(); i++) {
                Node nNode = nodeList.item(i);
                if (nNode.getNodeType() == Node.ELEMENT_NODE) {
                    Element eElement = (Element) nNode;
                    String status = eElement.getAttribute("status");
                    if ("KILLED".equalsIgnoreCase(status)) {
                        killed++;
                    } else if ("SURVIVED".equalsIgnoreCase(status)) {
                        survived++;
                    } else if ("NO_COVERAGE".equalsIgnoreCase(status)) {
                        noCoverage++;
                    }
                }
            }

            // Calculate the mutation score as a percentage.
            int mutationScore = (int) (((double) killed / (killed + survived + noCoverage)) * 100);

            // Set the results in the PitestResults object.
            results.setKilledMutants(killed);
            results.setSurvivedMutants(survived);
            results.setNoCoverageMutants(noCoverage);
            results.setMutationScore(mutationScore);

        } catch (Exception e) {
            e.printStackTrace();
        }

        // Return the parsed results.
        return results;
    }
}
